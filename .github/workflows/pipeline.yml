name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on: [push]
jobs:
  check-bats-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: npm install -g bats
      - run: bats -v
      - run: echo $MY_SECRET
      - run: echo $TEST
      - run: echo "Hello World!"
      - name: Run script file
        run: |
         chmod +x run.sh | bash ./run.sh
        shell: bash
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
         host: ${{ secrets.HOST }}
         username: ${{ secrets.USERNAME }}
         password: ${{ secrets.PASSWORD }}
         port: 22
         script: echo "Hello World"
      - name: copy file to remote server
        uses: garygrossgarten/github-action-scp@release
        with:
         local: ./run.sh
         remote: /home/moritz/run.sh
         host: ${{ secrets.HOST }}
         username: ${{ secrets.USERNAME }}
         password: ${{ secrets.PASSWORD }}
          - name: copy docker scriptfile to remote server
        uses: garygrossgarten/github-action-scp@release
        with:
         local: ./run.sh
         remote: /home/moritz/run.sh
         host: ${{ secrets.HOST }}
         username: ${{ secrets.USERNAME }}
         password: ${{ secrets.PASSWORD }}
  build:
    defaults:
      run:
        working-directory: ./backend/
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'adopt'
      - name: Make gradlew executable
        run: chmod +rwx gradlew
      - name: execute gradlew
        run: ./gradlew test
  dockerimage:
    defaults:
      run:
        working-directory: ./backend/
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag moooor/testpipeline
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Push the Docker image
        run: docker push moooor/testpipeline